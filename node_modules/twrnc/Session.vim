let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/jaredh159/twrnc/twrnc
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 src/plugin.ts
badd +1 src/__tests__/tw.spec.ts
badd +1 src/resolve/inset.ts
badd +70 ~/jaredh159/twrnc/twrnc/package.json
badd +352 ~/jaredh159/twrnc/twrnc/src/ClassParser.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/styles.ts
badd +9 src/cache.ts
badd +10 ~/jaredh159/twrnc/twrnc/src/index.ts
badd +47 ~/jaredh159/twrnc/twrnc/src/create.ts
badd +2 src/types.ts
badd +1 src/hooks.ts
badd +2 src/__tests__/borders.spec.ts
badd +1 src/__tests__/width-height.spec.ts
badd +3 ~/gertie/project-notes/_scratch.md
badd +16 src/__tests__/prefix-match.spec.ts
badd +64 ~/jaredh159/twrnc/twrnc/src/__tests__/custom-utils.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/screens.spec.ts
badd +6 ~/jaredh159/twrnc/twrnc/src/__tests__/arbitrary-breakpoint-prefixes.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/aspect-ratio.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/colors.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/dark-mode.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/flex.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/font-size.spec.ts
badd +7 ~/jaredh159/twrnc/twrnc/src/__tests__/inset.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/letter-spacing.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/margin.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/min-max-dims.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/shadow.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/simple-mappings.spec.ts
badd +12 ~/jaredh159/twrnc/twrnc/src/__tests__/z-index.spec.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/borders.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/color.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/flex.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/font-family.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/font-size.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/letter-spacing.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/line-height.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/opacity.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/shadow.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/spacing.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/resolve/width-height.ts
badd +222 ~/jaredh159/twrnc/twrnc/src/helpers.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/parse-inputs.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/screens.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/tw-config.ts
badd +1 ./
badd +9 ~/jaredh159/twrnc/twrnc/.npmignore
badd +389 node_modules/@types/node/console.d.ts
badd +1 ~/jaredh159/twrnc/twrnc/.npmrc
badd +2 ~/jaredh159/twrnc/twrnc/babel.config.js
badd +3 ~/jaredh159/twrnc/twrnc/.prettierrc.json
badd +5 ~/jaredh159/twrnc/twrnc/.eslintrc.js
badd +12 ~/jaredh159/twrnc/twrnc/.github/workflows/ci.yml
argglobal
%argdel
$argadd ./
edit ~/jaredh159/twrnc/twrnc/.npmignore
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
balt ~/jaredh159/twrnc/twrnc/.npmrc
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=19
setlocal fen
let s:l = 9 - ((8 * winheight(0) + 27) / 54)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 9
normal! 015|
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
